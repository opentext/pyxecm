[build-system]
build-backend = 'setuptools.build_meta'
requires = ['setuptools >= 61.0']

[project]
classifiers = [
  'Development Status :: 4 - Beta',
  'Programming Language :: Python :: 3',
  'License :: OSI Approved :: Apache Software License',
  'Operating System :: OS Independent',
  'Intended Audience :: Developers',
  'Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Content Management System',
]
dependencies = [
  'requests < 3',
  'requests_toolbelt',
  'setuptools',
  'kubernetes',
  'zipfile36',
  'suds',
  'python-hcl2',
  'xmltodict',
  'lxml',
  'openpyxl',
  'pandas',
  'python-magic',
  'websockets',
  'pydantic-settings',
  'fastapi',
  'uvicorn',
  'python-multipart',
  'aiofiles',
  'asyncio',
  'jinja2',
  'prometheus-fastapi-instrumentator'  
]
description = 'A Python library to interact with Opentext Extended ECM REST API'
keywords = [
  'opentext',
  'extendedecm',
  'contentserver',
  'otds',
  'appworks',
  'archivecenter',
]
name = 'pyxecm'
readme = 'README.md'
requires-python = '>=3.10'
version = '0.0.0'

[[project.authors]]
email = 'kgatzweiler@opentext.com'
name = 'Kai Gatzweiler'

[[project.authors]]
email = 'mdiefenb@opentext.com'
name = 'Dr. Marc Diefenbruch'

[project.optional-dependencies]
browserautomation = ['selenium', 'chromedriver_autoinstaller']
dataloader = [
  'pandas',
  'pyyaml',
  'python-hcl2',
  'tropycal',
  'shapely',
  'cartopy',
]
sap = ['pyrfc==2.8.3']
profiling = [
  'pyinstrument',
]

[project.urls]
Homepage = 'https://github.com/opentext/pyxecm'

[tool]
[tool.setuptools]
packages = [
  'pyxecm',
  'pyxecm.customizer',
  'pyxecm.customizer.api',
  'pyxecm.maintenance_page',
  'pyxecm.maintenance_page.templates',
  'pyxecm.maintenance_page.static',
  'pyxecm.helper',
]

[tool.setuptools.package-data]
'pyxecm.maintenance_page.templates' = ['*']
'pyxecm.maintenance_page.static' = ['*']

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = ["ALL"]

# E4: Enforces Python-specific formatting and style rules, often related to imports and code layout (e.g., E402, module-level import not at top of file).
# E7: Relates to errors in Python syntax or usage, such as invalid expressions.
# E9: Catches Python runtime errors (e.g., undefined variables, unsupported operations).
# F: Stands for "Flake8" rules, which include a broad range of Python style and error checks (e.g., unused imports, undefined variables, etc.).
# FIX: Selects rules that Ruff can automatically fix (e.g., applying auto-corrections for code style violations).
# I: Relates to "Import" rules, which enforce best practices for managing Python imports (e.g., sorting imports, unused imports, etc.).
# UP032: Prevents Ruff from converting .format() calls to f-strings.
# D204 and D205: Prevents Ruff from enforcing changes to empty lines after docstrings.

ignore = ["FIX002", "TD002", "TD003", "BLE001", "ERA001", "S105", "S106", "S107", "S113", "S311", "S314", "S603", "S608", "RUF005", "RUF012", "E501", "PERF203", "UP038", "PLW2901", "PD002", "PD901", "UP032", "D202", "D203", "D213", "PLR0911", "PLR0912", "PLR0913", "PLR0915", "PLR2004", "PTH", "PTH123", "PTH103", "PTH104", "PTH107", "PTH110", "PTH112", "PTH113", "PTH118", "PTH119", "PTH120", "PTH122", "FBT001", "FBT002", "RET504", "RET505", "C901", "B019", "TRY400", "COM812"]
fixable = ["ALL"]
unfixable = []

[dependency-groups]
dev = [
  'pdoc3',
  'mkdocs',
  'mkdocstrings[python]',
  'mkdocs-material',
  'mkdocs-git-revision-date-localized-plugin',
  'pymdown-extensions',
  "ruff",
  'python-decouple',
  'settings-doc',
]

[tool.ruff]
line-length = 120
exclude = []
